version: '3'
services:

  # Mongo Database for the push notification
  # ========================================
  wordz-push-notification-mongo:
    container_name: wordz-push-notification-mongo
    image: pierreraffa/wordz-push-notification-mongo:latest
    env_file: .env
    command: --auth
    build:
      context: ./wordz-push-notification-mongo
      args: # used by setup.js
        - mongoInitDbRootUsername=${MONGO_INITDB_ROOT_USERNAME}
        - mongoInitDbRootPassword=${MONGO_INITDB_ROOT_PASSWORD}
        - mongoApiPassword=${MONGO_API_PASSWORD}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    expose:
      - "27017"
    volumes:
      - /opt/wordz/prod/wordz-push-notification-mongo/db:/data/db

  # Microservice for the push notification
  # ======================================
  wordz-push-notification:
    container_name: wordz-push-notification
    image: pierreraffa/wordz-push-notification:latest
    environment:
      NODE_ENV: production
      MONGO_API_PASSWORD: ${MONGO_API_PASSWORD}
      API_ADMIN_PASSWORD: ${API_ADMIN_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    expose:
      - "3010"
    links:
      - wordz-push-notification-mongo:mongohost

  # Mongo Database for the purchase
  # ===============================
  wordz-purchase-mongo:
    container_name: wordz-purchase-mongo
    image: pierreraffa/wordz-purchase-mongo:latest
    env_file: .env
    command: --auth
    build:
      context: ./wordz-purchase-mongo
      args: # used by setup.js
        - mongoInitDbRootUsername=${MONGO_INITDB_ROOT_USERNAME}
        - mongoInitDbRootPassword=${MONGO_INITDB_ROOT_PASSWORD}
        - mongoApiPassword=${MONGO_API_PASSWORD}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    expose:
      - "27017"
    volumes:
      - /opt/wordz/prod/wordz-purchase-mongo/db:/data/db

  # Microservice for the purchase
  # =============================
  wordz-purchase:
    container_name: wordz-purchase
    image: pierreraffa/wordz-purchase:latest
    environment:
      NODE_ENV: production
      MONGO_API_PASSWORD: ${MONGO_API_PASSWORD}
      API_ADMIN_PASSWORD: ${API_ADMIN_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    expose:
      - "3010"
    links:
      - wordz-purchase-mongo:mongohost

  # Mongo Database for the game
  # ===============================
  wordz-game-mongo:
    container_name: wordz-game-mongo
    image: pierreraffa/wordz-game-mongo:latest
    env_file: .env
    command: --auth
    build:
      context: ./wordz-game-mongo
      args: # used by setup.js
        - mongoInitDbRootUsername=${MONGO_INITDB_ROOT_USERNAME}
        - mongoInitDbRootPassword=${MONGO_INITDB_ROOT_PASSWORD}
        - mongoApiPassword=${MONGO_API_PASSWORD}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    expose:
      - "27017"
    volumes:
      - /opt/wordz/prod/wordz-game-mongo/db:/data/db

  # Microservice for the game
  # =============================
  wordz-game:
    container_name: wordz-game
    image: pierreraffa/wordz-game:latest
    environment:
      NODE_ENV: production
      MONGO_API_PASSWORD: ${MONGO_API_PASSWORD}
      API_ADMIN_PASSWORD: ${API_ADMIN_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    expose:
      - "3010"
    links:
      - wordz-game-mongo:mongohost

  # Mongo Database for the authentication
  # ===============================
  wordz-authentication-mongo:
    container_name: wordz-authentication-mongo
    image: pierreraffa/wordz-authentication-mongo:latest
    env_file: .env
    command: --auth
    build:
      context: ./wordz-authentication-mongo
      args: # used by setup.js
        - mongoInitDbRootUsername=${MONGO_INITDB_ROOT_USERNAME}
        - mongoInitDbRootPassword=${MONGO_INITDB_ROOT_PASSWORD}
        - mongoApiPassword=${MONGO_API_PASSWORD}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    expose:
      - "27017"
    volumes:
      - /opt/wordz/prod/wordz-authentication-mongo/db:/data/db

  # Microservice for the authentication
  # =============================
  wordz-authentication:
    container_name: wordz-authentication
    image: pierreraffa/wordz-authentication:latest
    environment:
      NODE_ENV: production
      MONGO_API_PASSWORD: ${MONGO_API_PASSWORD}
      API_ADMIN_PASSWORD: ${API_ADMIN_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    expose:
      - "3010"
    links:
      - wordz-authentication-mongo:mongohost


  # Microservice for the gateway
  # ========================
  wordz-gateway:
    container_name: wordz-gateway
    image: pierreraffa/wordz-gateway:latest
    environment:
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "3000:3000"

  # Cron Service
  # ============
  wordz-cron:
    container_name: wordz-cron
    image: pierreraffa/wordz-cron:latest
    environment:
      NODE_ENV: production
      MONGO_API_PASSWORD: ${MONGO_API_PASSWORD}
      AUTHENTICATION_API_ADMIN_PASSWORD: ${API_ADMIN_PASSWORD}
    links:
      - wordz-authentication-mongo:mongohost
